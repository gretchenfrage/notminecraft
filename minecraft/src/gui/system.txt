GUI model

Three event modalities:
- discrete
- continuous
- lazy

Events may fall into several modalities simultaneously.

Let me think...


Events may also be positional or non-positional.

Finally, an event occurs at a particular instant in time.

Types of unfiltered events we care about:
- mouse
    - raw movement
    - cursor position and movement
    - scrolling
    - buttons pressing down and up
- keyboard
    - button pressed
    - button released
- window focused or not
- scale factor


State that is transformable between nodes, but also should get passed to non-positional events:
- width
- height
- scale

Ok so, state that is maintained between events and doesn't get transformed between nodes:
- depressed keyboard keys and mouse buttons
    - except, just turns into empty set if window loses focus
- cursor position if cursor exists (still there even if window loses focus)
- whether the window is focused

Events that the state as a whole gets notified for:
- window became focused or unfocused
- keyboard key pressed or unpressed
    - doesn't get sent in if window is unfocused
    - but also, virtual presses/releases are _not_ generated for pressed keys when window becomes focused/unfocused
    - as such, key handling logic should also implement appropriate logic for handling focus/unfocus manually
    - I've contemplated this a fair lot and think that this is ultimately best
- "character input" (idk)

Event that positional nodes get notified for:
- cursor is moved
- cursor button is pressed or released
    - unless window is unfocused
    - passed with "hits" flag that is true unless
        - beyond visible window area
        - clipped out
        - a previous node's handler for this event return "blocks"
- mouse scrolling
    - also passed with "hits" flag
    - need to experimentally verify this works correctly with the OS, it's weird because you can scroll a window
      without focusing it

How to deal with mouse capturing?

Since it's impossible to be unfocused but mouse captured, making this into an ordered enum makes sense.

Thus, just have an "on focus level changed" handler.

And eh, idk, probably put some sort of thing which lets you capture mouse in context struct thing.

And finally separate non-positional click/mouse events for capturing.
